{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nexport var userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {\n    increment: function increment(state) {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: function decrement(state) {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n  }\n});\nvar _counterSlice$actions = counterSlice.actions,\n    increment = _counterSlice$actions.increment,\n    decrement = _counterSlice$actions.decrement,\n    incrementByAmount = _counterSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport var selectUser = function selectUser(state) {\n  return state.user.value;\n};\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","userSlice","name","initialState","user","reducers","increment","state","value","decrement","incrementByAmount","action","payload","counterSlice","actions","selectUser","reducer"],"sources":["C:/Users/ragha/OneDrive/Desktop/Projects/linkedin-clone/src/features/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState:{\n    user: null,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\nexport const selectUser = (state) => state.user.value;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,OAAO,IAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,MAD6B;EAEnCC,YAAY,EAAC;IACXC,IAAI,EAAE;EADK,CAFsB;EAKnCC,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAD,EAAW;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACC,KAAN,IAAe,CAAf;IACD,CAPO;IAQRC,SAAS,EAAE,mBAACF,KAAD,EAAW;MACpBA,KAAK,CAACC,KAAN,IAAe,CAAf;IACD,CAVO;IAWR;IACAE,iBAAiB,EAAE,2BAACH,KAAD,EAAQI,MAAR,EAAmB;MACpCJ,KAAK,CAACC,KAAN,IAAeG,MAAM,CAACC,OAAtB;IACD;EAdO;AALyB,CAAD,CAA7B;4BAuBoDC,YAAY,CAACC,O;IAAzDR,S,yBAAAA,S;IAAWG,S,yBAAAA,S;IAAWC,iB,yBAAAA,iB;;AAErC,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACR,KAAD;EAAA,OAAWA,KAAK,CAACH,IAAN,CAAWI,KAAtB;AAAA,CAAnB;AAEP,eAAeP,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}